<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Flexberry Launcher</title>
  <link rel="stylesheet" href="./style/main.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/inter-ui@3.11.0/inter.min.css">
</head>

<body ondragstart="return false" id="body">
  <div class="titlebar">
    <span id="title" class="title"><img src="assets/logo.ico" alt="Logo" width="20"> Flexberry Launcher</span>
    <svg id="close" xmlns="http://www.w3.org/2000/svg" class="close" fill="none" viewBox="0 0 24 24"
      stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </div>
  <span class="tooltip" id="tooltip"></span>
  <div class="content">
    <div class="sidebar">
      <div class="sidebarGroup">
        <span class="material-icons sidebarItem" id="back" style="opacity: 0; cursor: default">arrow_back</span>
      </div>
      <div class="sidebarGroup">
        <img class="sidebarItem sidebarMainItem" alt="Profile"
          src="https://crafatar.com/avatars/7d0278adeaca4ad993104da0ae62e4bd?overlay=true">
        <span class="material-icons sidebarItem cog" onclick="tab('settings', this);">settings</span>
        <span class="material-icons sidebarItem puzzle" onclick="tab('resources', this);">extension</span>
      </div>
      <div class="sidebarGroup" style="opacity: 0;">
        â€¢
      </div>
    </div>
    <div class="main" id="main">
      <div class="tab" id="tab">
        <div class="tabContent" id="profiler">
          <div class="actions">
            <input class="text" onkeyup="search(this.value);" onemptied="search(this.value);" id="search"
              placeholder="Search profiles...">
            <span class="divider"></span>
            <span class="btn"><span class="material-icons">add</span> Add Profile</span>
          </div>
          <div class="profiles" id="profiles">
          </div>
        </div>
        <div class="tabContent" id="resources">
          <span style="font-family: 'Minecraft Ten'; font-size: xx-large; color: green;">
            Icerikler falan
          </span>
        </div>
        <div class="tabContent" id="settings">
          <span style="font-family: 'Minecraft Ten'; font-size: xx-large; color: red;">
            Ayarlar falan
          </span>
        </div>
      </div>
      <div class="playSection" id="playSection">
        <span class="play">
          PLAY
        </span>
        <span class="information" id="info"></span>
      </div>
    </div>
  </div>
  <script>
    function search(parameter) {
      document.querySelectorAll(".profile").forEach(pEl => {
        if (!pEl.id.toLowerCase().includes(parameter.toLowerCase())) {
          // setTimeout(function () {
          pEl.style.display = "none";
          // }, 200)
          // pEl.style.opacity = "0"
        } else {
          // setTimeout(function () {
          //   pEl.style.opacity = "1"
          // }, 200)
          pEl.style.display = "flex";
        }
      })
    }

    function getOffset(el) {
      const rect = el.getBoundingClientRect();
      return {
        left: rect.left + window.scrollX,
        top: rect.top + window.scrollY
      }
    }

    var hovering = "";

    function tooltip(el, text, state) {
      var tooltip = document.getElementById("tooltip");
      var bodyBounds = document.getElementById("body").getBoundingClientRect()
      if (!state) {
        tooltip.style.transition = ".4s";
        tooltip.style.opacity = "0"
        tooltip.style.zIndex = "-69"
        tooltip.style.transition = "0";
        return;
      }
      tooltip.innerHTML = text;
      tooltip.style.top = getOffset(el).top + 8 + "px";
      tooltip.style.left = getOffset(el).left + 52 + "px";
      setTimeout(function () {
        tooltip.style.transition = ".4s";
        tooltip.style.opacity = "1"
        tooltip.style.zIndex = "69"
        tooltip.style.transition = "0";
      }, 200);
      console.log(getOffset(el))
    }

    function hoverCheck(el, text) {
      if (hovering == el.id) {
        hovering = "";
        tooltip(el, text, false);
        clearTimeout(timeout);
        return
      }
      hovering = el.id;
      var timeout = setTimeout(function () {
        hovering == el.id && tooltip(el, text, true);
      }, 200);
    }

    function assignOnClick(el, bool) {
      el.onclick = function () { bool ? tab() : "" };
    }

    function setAsActive(el) {
      document.querySelectorAll(".active").forEach(e => e.classList.remove("active"));
      el.classList.add("active")
    }

    function playLater(opinion) {
      pleaseSlowDown = true;
      setTimeout(function () {
        tab(opinion)
        pleaseSlowDown, alreadyPlaying = false;
      }, 601);
    }

    var isAnyTabActive, alreadyPlaying, pleaseSlowDown = false;
    var activeTab;
    var cache;
    function tab(opinion, el) {
      if (pleaseSlowDown) return setTimeout(function () {
        pleaseSlowDown = false;
      }, 600);
      if (alreadyPlaying)
        return playLater(opinion);
      alreadyPlaying = true;
      setTimeout(function () {
        alreadyPlaying = false;
      }, 601)
      el && setAsActive(el);
      var playSection = document.getElementById("playSection");
      var main = document.getElementById("main");
      var tab = document.getElementById("tab");
      var info = document.getElementById("info");
      var back = document.getElementById("back");
      var tabs = {
        profiler: document.getElementById("profiler"),
        settings: document.getElementById("settings"),
        resources: document.getElementById("resources")
      }
      if (tabs[opinion] && isAnyTabActive && activeTab !== opinion) {
        tabs[activeTab].style.opacity = "0";
        tabs[activeTab].style.transition = ".3s";
        setTimeout(function () {
          tabs[activeTab].style.display = "none";
          tabs[opinion].style.display = "block";
          tabs[opinion].style.opacity = "0";
          tabs[activeTab].style.opacity = "1";
          tabs[opinion].style.transition = ".3s";
          setTimeout(function () {
            tabs[opinion].style.opacity = "1";
            tabs[opinion].style.transition = "0";
            activeTab = opinion;
            cache = tabs[opinion];
          }, 300)
          tabs[activeTab].style.transition = "0";
        }, 300)
        return;
      }
      if (tabs[opinion] && !isAnyTabActive) {
        isAnyTabActive = true;
        activeTab = opinion;
        cache = tabs[opinion];
        setTimeout(function () {
          playSection.style.transition = "0s";
          playSection.style.transform = `translateY(286px)`;
          main.style.justifyContent = "space-between";
          tab.style.transform = "translateY(0px)";
          info.style.display = "none";
          tab.style.opacity = "1";
        }, 600);
        tabs[opinion].style.display = "block"
        tab.style.display = "block";
        playSection.style.transition = ".6s";
        playSection.style.position = "absolute";
        playSection.style.transform = `translateY(156px)`;
        info.style.opacity = "0";
        back.style.opacity = "1";
        back.style.cursor = "pointer";
        assignOnClick(back, true)
      } else {
        isAnyTabActive = false;
        document.querySelectorAll(".active").forEach(e => e.classList.remove("active"));
        setTimeout(function () {
          playSection.style.transition = "0s";
          playSection.style.transform = "none";
          main.style.justifyContent = "center";
          tab.style.display = "none";
          setTimeout(function () {
            info.style.opacity = "1";
          }, 100)
          info.style.display = "block";
          tabs[activeTab].style.display = "none"
          activeTab, cache = "";
        }, 600);
        playSection.style.transition = ".6s";
        playSection.style.transform = "translateY(130px)";
        back.style.opacity = "0";
        back.style.cursor = "default";
        tab.style.opacity = ".2";
        tab.style.transform = "translateY(-500px)";
        assignOnClick(back, false)
      }
    }
  </script>
  <script src="./renderer.js"></script>
</body>

</html>